import {UserCache, thenSequence} from '../lib';

let UC = new UserCache([
    'Bob Marley',
    'Meg Griffin',
    'Jil Smith',
    'Don Johnson@',
    'Ron Jeremy',
    'Jon Lajoie',
    'King Kong',
    'Bill Clinton',
    'Will Smith',
], __filename, jasmine);

beforeAll(() => UC.setup());
afterAll(() => UC.cleanup());

let starred_conv1 = {
    "index": "...",
    "is_in_muted": false,
    "is_in_recent": false,
    "is_on_left_pane": true,
    "label": "starred",
    "label_id": "<label:starred>",
    "mk_label_status": "active",
    "mk_label_subtype": "starred",
    "mk_label_type": "system_label",
    "mk_rec_type": "label",
    "sync_cursor": "{}",
    "sync_inbox_time": 0,
};

let starred_conv2 = {
    "admins": [],
    "autojoin_url": "<autojoin:starredConv>",
    "begin_message_nr": 1,
    "bw_message_nr": 1,
    "can_post": true,
    "cmail": "<cmail:starredConv>",
    "conversation_id": "<conv:starredConv>",
    "creator_id": "<account:Bob Marley>",
    "default_members": [],
    "export_files": [],
    "export_progress": "1",
    "fw_message_nr": 1,
    "guests": [],
    "has_email_subject": false,
    "has_pinboard": false,
    "has_task_archive": false,
    "has_taskboard": false,
    "inbox_message_nr": 1,
    "inbox_time": "...",
    "is_automute": false,
    "is_full": true,
    "is_init": true,
    "is_list": false,
    "is_managed": false,
    "is_mark_unread": false,
    "is_premium": false,
    "is_tiny": true,
    "join_message_nr": 1,
    "label_ids": [
    "<label:starred>",
    ],
    "labels": [
    "starred",
    ],
    "last_inbox_nr": 0,
    "last_message_nr": 1,
    "last_message_time": "...",
    "leavers": [],
    "members": [
    "<account:Bob Marley>",
    ],
    "mk_alert_level": "default",
    "mk_conv_type": "cct_default",
    "mk_init_mode": "ic_tiny",
    "mk_rec_type": "conv",
    "organisation_id": null,
    "profile_id": "<account:Bob Marley>",
    "read_message_nr": 1,
    "send_message_nr": 1,
    "show_message_nr": 1,
    "snooze_interval": 0,
    "snooze_time": 0,
    "teams": [],
    "topic": "starredConv",
    "topic_message_nr": 1,
    "unread_count": 0,
};

let unread_conv = {
    "stream": [{
    "account_id": "<account:Fleep Support>",
    "activity_time": "...",
    "dialog_id": "<dlg:Fleep Support>",
    "display_name": "Fleep Support",
    "email": "<email:Fleep Support>",
    "fleep_address": "<fladdr:Fleep Support>",
    "is_hidden_for_add": true,
    "mk_account_status": "active",
    "mk_rec_type": "contact",
    "organisation_id": null,
    "sort_rank": 1,
    },
    {
    "index": "...",
    "is_in_muted": true,
    "is_in_recent": true,
    "is_on_left_pane": false,
    "label": "Unread",
    "label_id": "<label:Unread>",
    "mk_label_status": "active",
    "mk_label_subtype": "unread",
    "mk_label_type": "system_label",
    "mk_rec_type": "label",
    "sync_cursor": "{}",
    "sync_inbox_time": 0,
    },
    {
    "admins": [],
    "autojoin_url": "<autojoin:Fleep Support>",
    "begin_message_nr": 1,
    "bw_message_nr": 2,
    "can_post": true,
    "cmail": "<cmail:Fleep Support>",
    "conversation_id": "<dlg:Fleep Support>",
    "creator_id": "<account:Fleep Support>",
    "default_members": [
    "<account:Fleep Support>",
    ],
    "default_topic": "Fleep Support",
    "export_files": [],
    "export_progress": "1",
    "fw_message_nr": 2,
    "guests": [],
    "has_email_subject": false,
    "has_pinboard": false,
    "has_task_archive": false,
    "has_taskboard": false,
    "inbox_message_nr": 2,
    "inbox_time": "...",
    "is_automute": false,
    "is_full": true,
    "is_init": true,
    "is_list": false,
    "is_managed": false,
    "is_premium": false,
    "is_tiny": true,
    "join_message_nr": 1,
    "label_ids": [
    "<label:1:1 Conversations>",
    ],
    "last_inbox_nr": 1,
    "last_message_nr": 2,
    "last_message_time": "...",
    "leavers": [],
    "members": [
    "<account:Fleep Support>",
    "<account:Jon Lajoie>",
    ],
    "mk_alert_level": "default",
    "mk_conv_type": "cct_default",
    "mk_init_mode": "ic_tiny",
    "mk_rec_type": "conv",
    "organisation_id": null,
    "profile_id": "<account:Jon Lajoie>",
    "read_message_nr": 0,
    "show_message_nr": 2,
    "snooze_interval": 0,
    "snooze_time": 0,
    "teams": [],
    "topic": "",
    "topic_message_nr": 1,
    "unread_count": 1
    },
    {
    "account_id": "<account:Fleep Support>",
    "conversation_id": "<dlg:Fleep Support>",
    "inbox_nr": 1,
    "lock_account_id": null,
    "message": "<msg><p>Hi there,</p><p>We've created this conversation so it would be easy for you to get in " +
    "touch with us at Fleep. Feel free to use this conversation if you have any questions or feedback for us. " +
    "(We <i flp=\"_\" fls=\"_\">love</i> feedback.)</p><p>I will reply as quickly as I can, but I am only " +
    "human <emo kind=\"esmile\">:)</emo><br/></p><p>Happy Fleeping!</p></msg>",
    "message_nr": 2,
    "mk_message_state": "urn:fleep:message:mk_message_state:plain",
    "mk_message_type": "text",
    "mk_rec_type": "message",
    "posted_time": "...",
    "prev_message_nr": 1,
    "profile_id": "<account:Jon Lajoie>",
    "tags": [],
    }],
};

let recent_conv = {
    "stream": [{
    "account_id": "<account:Fleep Support>",
    "activity_time": "...",
    "dialog_id": "<dlg:Fleep Support>",
    "display_name": "Fleep Support",
    "email": "<email:Fleep Support>",
    "fleep_address": "<fladdr:Fleep Support>",
    "is_hidden_for_add": true,
    "mk_account_status": "active",
    "mk_rec_type": "contact",
    "organisation_id": null,
    "sort_rank": 1,
    },
    {
    "index": "...",
    "is_in_muted": false,
    "is_in_recent": true,
    "is_on_left_pane": true,
    "label": "Recent",
    "label_id": "<label:Recent>",
    "mk_label_status": "active",
    "mk_label_subtype": "recent",
    "mk_label_type": "system_label",
    "mk_rec_type": "label",
    "sync_cursor": "{}",
    "sync_inbox_time": 0,
    },
    {
    "admins": [],
    "autojoin_url": "<autojoin:recentConv>",
    "begin_message_nr": 1,
    "bw_message_nr": 2,
    "can_post": true,
    "cmail": "<cmail:recentConv>",
    "conversation_id": "<conv:recentConv>",
    "creator_id": "<account:Meg Griffin>",
    "default_members": [],
    "export_files": [],
    "export_progress": "1",
    "fw_message_nr": 2,
    "guests": [],
    "has_email_subject": false,
    "has_pinboard": false,
    "has_task_archive": false,
    "has_taskboard": false,
    "inbox_message_nr": 2,
    "inbox_time": "...",
    "is_automute": false,
    "is_full": true,
    "is_init": true,
    "is_list": false,
    "is_managed": false,
    "is_mark_unread": false,
    "is_premium": false,
    "is_tiny": true,
    "join_message_nr": 1,
    "label_ids": [],
    "last_inbox_nr": 1,
    "last_message_nr": 2,
    "last_message_time": "...",
    "leavers": [],
    "members": [
    "<account:Meg Griffin>",
    ],
    "mk_alert_level": "default",
    "mk_conv_type": "cct_default",
    "mk_init_mode": "ic_tiny",
    "mk_rec_type": "conv",
    "organisation_id": null,
    "profile_id": "<account:Meg Griffin>",
    "read_message_nr": 2,
    "send_message_nr": 1,
    "show_message_nr": 2,
    "snooze_interval": 0,
    "snooze_time": 0,
    "teams": [],
    "topic": "recentConv",
    "topic_message_nr": 1,
    "unread_count": 0,
    },
    {
    "admins": [],
    "autojoin_url": "<autojoin:Fleep Support>",
    "begin_message_nr": 1,
    "bw_message_nr": 2,
    "can_post": true,
    "cmail": "<cmail:Fleep Support>",
    "conversation_id": "<dlg:Fleep Support>",
    "creator_id": "<account:Fleep Support>",
    "default_members": [
    "<account:Fleep Support>",
    ],
    "default_topic": "Fleep Support",
    "export_files": [],
    "export_progress": "1",
    "fw_message_nr": 2,
    "guests": [],
    "has_email_subject": false,
    "has_pinboard": false,
    "has_task_archive": false,
    "has_taskboard": false,
    "inbox_message_nr": 2,
    "inbox_time": "...",
    "is_automute": false,
    "is_full": true,
    "is_init": true,
    "is_list": false,
    "is_managed": false,
    "is_premium": false,
    "is_tiny": true,
    "join_message_nr": 1,
    "label_ids": [
    "<label:1:1 Conversations>",
    ],
    "last_inbox_nr": 1,
    "last_message_nr": 2,
    "last_message_time": "...",
    "leavers": [],
    "members": [
    "<account:Fleep Support>",
    "<account:Meg Griffin>",
    ],
    "mk_alert_level": "default",
    "mk_conv_type": "cct_default",
    "mk_init_mode": "ic_tiny",
    "mk_rec_type": "conv",
    "organisation_id": null,
    "profile_id": "<account:Meg Griffin>",
    "read_message_nr": 0,
    "show_message_nr": 2,
    "snooze_interval": 0,
    "snooze_time": 0,
    "teams": [],
    "topic": "",
    "topic_message_nr": 1,
    "unread_count": 1
    },
    {
    "account_id": "<account:Meg Griffin>",
    "conversation_id": "<conv:recentConv>",
    "inbox_nr": 1,
    "lock_account_id": null,
    "message": "<msg><p>recentMsg</p></msg>",
    "message_nr": 2,
    "mk_message_state": "urn:fleep:message:mk_message_state:plain",
    "mk_message_type": "text",
    "mk_rec_type": "message",
    "posted_time": "...",
    "prev_message_nr": 1,
    "profile_id": "<account:Meg Griffin>",
    "tags": [],
    },
    {
    "account_id": "<account:Fleep Support>",
    "conversation_id": "<dlg:Fleep Support>",
    "inbox_nr": 1,
    "lock_account_id": null,
    "message": "<msg><p>Hi there,</p><p>We've created this conversation so it would be easy for you to get in " +
    "touch with us at Fleep. Feel free to use this conversation if you have any questions or feedback for us. " +
    "(We <i flp=\"_\" fls=\"_\">love</i> feedback.)</p><p>I will reply as quickly as I can, but I am only " +
    "human <emo kind=\"esmile\">:)</emo><br/></p><p>Happy Fleeping!</p></msg>",
    "message_nr": 2,
    "mk_message_state": "urn:fleep:message:mk_message_state:plain",
    "mk_message_type": "text",
    "mk_rec_type": "message",
    "posted_time": "...",
    "prev_message_nr": 1,
    "profile_id": "<account:Meg Griffin>",
    "tags": [],
    }],
};

let muted_conv = {
    "stream": [{
    "index": "...",
    "is_in_muted": true,
    "is_in_recent": false,
    "is_on_left_pane": true,
    "label": "Muted",
    "label_id": "<label:Muted>",
    "mk_label_status": "active",
    "mk_label_subtype": "muted",
    "mk_label_type": "system_label",
    "mk_rec_type": "label",
    "sync_cursor": "{}",
    "sync_inbox_time": 0,
    },
    {
    "admins": [],
    "autojoin_url": "<autojoin:mutedConv>",
    "begin_message_nr": 1,
    "bw_message_nr": 1,
    "can_post": true,
    "cmail": "<cmail:mutedConv>",
    "conversation_id": "<conv:mutedConv>",
    "creator_id": "<account:Ron Jeremy>",
    "default_members": [],
    "export_files": [],
    "export_progress": "1",
    "fw_message_nr": 1,
    "guests": [],
    "has_email_subject": false,
    "has_pinboard": false,
    "has_task_archive": false,
    "has_taskboard": false,
    "inbox_message_nr": 1,
    "inbox_time": "...",
    "is_automute": false,
    "is_full": true,
    "is_init": true,
    "is_list": false,
    "is_managed": false,
    "is_mark_unread": false,
    "is_premium": false,
    "is_tiny": true,
    "join_message_nr": 1,
    "label_ids": [],
    "last_inbox_nr": 0,
    "last_message_nr": 1,
    "last_message_time": "...",
    "leavers": [],
    "members": [
    "<account:Ron Jeremy>",
    ],
    "mk_alert_level": "never",
    "mk_conv_type": "cct_default",
    "mk_init_mode": "ic_tiny",
    "mk_rec_type": "conv",
    "organisation_id": null,
    "profile_id": "<account:Ron Jeremy>",
    "read_message_nr": 1,
    "send_message_nr": 1,
    "show_message_nr": 1,
    "snooze_interval": -1,
    "snooze_time": 0,
    "teams": [],
    "topic": "mutedConv",
    "topic_message_nr": 1,
    "unread_count": 0,
    },
    {
    "account_id": "<account:Ron Jeremy>",
    "conversation_id": "<conv:mutedConv>",
    "inbox_nr": 0,
    "lock_account_id": null,
    "message": {
    "members": [],
    "org_name": null,
    "organisation_id": null,
    "topic": "mutedConv",
    },
    "message_nr": 1,
    "mk_message_state": "urn:fleep:message:mk_message_state:system",
    "mk_message_type": "create",
    "mk_rec_type": "message",
    "posted_time": "...",
    "prev_message_nr": 0,
    "profile_id": "<account:Ron Jeremy>",
    "tags": [],
    }],
};

let one_on_one_conv = {
    "stream": [{
    "account_id": "<account:Fleep Support>",
    "activity_time": "...",
    "dialog_id": "<dlg:Fleep Support>",
    "display_name": "Fleep Support",
    "email": "<email:Fleep Support>",
    "fleep_address": "<fladdr:Fleep Support>",
    "is_hidden_for_add": true,
    "mk_account_status": "active",
    "mk_rec_type": "contact",
    "organisation_id": null,
    "sort_rank": 1,
    },
    {
    "index": "...",
    "is_in_muted": true,
    "is_in_recent": true,
    "is_on_left_pane": false,
    "label": "1:1 Conversations",
    "label_id": "<label:1:1 Conversations>",
    "mk_label_status": "active",
    "mk_label_subtype": "1:1 conversations",
    "mk_label_type": "system_label",
    "mk_rec_type": "label",
    "sync_cursor": "{}",
    "sync_inbox_time": 0,
    },
    {
    "admins": [],
    "autojoin_url": "<autojoin:Fleep Support>",
    "begin_message_nr": 1,
    "bw_message_nr": 2,
    "can_post": true,
    "cmail": "<cmail:Fleep Support>",
    "conversation_id": "<dlg:Fleep Support>",
    "creator_id": "<account:Fleep Support>",
    "default_members": [
    "<account:Fleep Support>",
    ],
    "default_topic": "Fleep Support",
    "export_files": [],
    "export_progress": "1",
    "fw_message_nr": 2,
    "guests": [],
    "has_email_subject": false,
    "has_pinboard": false,
    "has_task_archive": false,
    "has_taskboard": false,
    "inbox_message_nr": 2,
    "inbox_time": "...",
    "is_automute": false,
    "is_full": true,
    "is_init": true,
    "is_list": false,
    "is_managed": false,
    "is_premium": false,
    "is_tiny": true,
    "join_message_nr": 1,
    "label_ids": [
    "<label:1:1 Conversations>",
    ],
    "last_inbox_nr": 1,
    "last_message_nr": 2,
    "last_message_time": "...",
    "leavers": [],
    "members": [
    "<account:Fleep Support>",
    "<account:Jil Smith>",
    ],
    "mk_alert_level": "default",
    "mk_conv_type": "cct_default",
    "mk_init_mode": "ic_tiny",
    "mk_rec_type": "conv",
    "organisation_id": null,
    "profile_id": "<account:Jil Smith>",
    "read_message_nr": 0,
    "show_message_nr": 2,
    "snooze_interval": 0,
    "snooze_time": 0,
    "teams": [],
    "topic": "",
    "topic_message_nr": 1,
    "unread_count": 1
    },
    {
    "account_id": "<account:Fleep Support>",
    "conversation_id": "<dlg:Fleep Support>",
    "inbox_nr": 1,
    "lock_account_id": null,
    "message": "<msg><p>Hi there,</p><p>We've created this conversation so it would be easy for you to get in " +
    "touch with us at Fleep. Feel free to use this conversation if you have any questions or feedback for us. " +
    "(We <i flp=\"_\" fls=\"_\">love</i> feedback.)</p><p>I will reply as quickly as I can, but I am only " +
    "human <emo kind=\"esmile\">:)</emo><br/></p><p>Happy Fleeping!</p></msg>",
    "message_nr": 2,
    "mk_message_state": "urn:fleep:message:mk_message_state:plain",
    "mk_message_type": "text",
    "mk_rec_type": "message",
    "posted_time": "...",
    "prev_message_nr": 1,
    "profile_id": "<account:Jil Smith>",
    "tags": [],
    }],
};

let spam_conv1 = {
    "index": "...",
    "is_in_muted": false,
    "is_in_recent": false,
    "is_on_left_pane": true,
    "label": "Spam",
    "label_id": "<label:Spam>",
    "mk_label_status": "active",
    "mk_label_subtype": "spam",
    "mk_label_type": "system_label",
    "mk_rec_type": "label",
    "sync_cursor": "{}",
    "sync_inbox_time": 0,
};

let spam_conv2 = {
    "admins": [],
    "autojoin_url": "<autojoin:spamConv>",
    "begin_message_nr": 1,
    "bw_message_nr": 1,
    "can_post": true,
    "cmail": "<cmail:spamConv>",
    "conversation_id": "<conv:spamConv>",
    "creator_id": "<account:Bill Clinton>",
    "default_members": [],
    "export_files": [],
    "export_progress": "1",
    "fw_message_nr": 1,
    "guests": [],
    "has_email_subject": false,
    "has_pinboard": false,
    "has_task_archive": false,
    "has_taskboard": false,
    "inbox_message_nr": 1,
    "inbox_time": "...",
    "is_automute": false,
    "is_full": true,
    "is_init": true,
    "is_list": false,
    "is_managed": false,
    "is_mark_unread": false,
    "is_premium": false,
    "is_tiny": true,
    "join_message_nr": 1,
    "label_ids": [
    "<label:Spam>",
    ],
    "labels": [
    "Spam",
    ],
    "last_inbox_nr": 0,
    "last_message_nr": 1,
    "last_message_time": "...",
    "leavers": [],
    "members": [
    "<account:Bill Clinton>",
    ],
    "mk_alert_level": "never",
    "mk_conv_type": "cct_default",
    "mk_init_mode": "ic_tiny",
    "mk_rec_type": "conv",
    "organisation_id": null,
    "profile_id": "<account:Bill Clinton>",
    "read_message_nr": 1,
    "send_message_nr": 1,
    "show_message_nr": 1,
    "snooze_interval": -1,
    "snooze_time": 0,
    "teams": [],
    "topic": "spamConv",
    "topic_message_nr": 1,
    "unread_count": 0,
};

let archived_conv1 = {
    "index": "...",
    "is_in_muted": false,
    "is_in_recent": false,
    "is_on_left_pane": true,
    "label": "Archived",
    "label_id": "<label:Archived>",
    "mk_label_status": "active",
    "mk_label_subtype": "archived",
    "mk_label_type": "system_label",
    "mk_rec_type": "label",
    "sync_cursor": "{}",
    "sync_inbox_time": 0,
};

let archived_conv2 = {
    "admins": [],
    "autojoin_url": "<autojoin:archivedConv>",
    "begin_message_nr": 1,
    "bw_message_nr": 1,
    "can_post": true,
    "cmail": "<cmail:archivedConv>",
    "conversation_id": "<conv:archivedConv>",
    "creator_id": "<account:King Kong>",
    "default_members": [],
    "export_files": [],
    "export_progress": "1",
    "fw_message_nr": 1,
    "guests": [],
    "has_email_subject": false,
    "has_pinboard": false,
    "has_task_archive": false,
    "has_taskboard": false,
    "hide_message_nr": 1,
    "inbox_message_nr": 1,
    "inbox_time": "...",
    "is_automute": false,
    "is_full": true,
    "is_init": true,
    "is_list": false,
    "is_managed": false,
    "is_mark_unread": false,
    "is_premium": false,
    "is_tiny": true,
    "join_message_nr": 1,
    "label_ids": [],
    "last_inbox_nr": 0,
    "last_message_nr": 1,
    "last_message_time": "...",
    "leavers": [],
    "members": [
    "<account:King Kong>",
    ],
    "mk_alert_level": "default",
    "mk_conv_type": "cct_default",
    "mk_init_mode": "ic_tiny",
    "mk_rec_type": "conv",
    "organisation_id": null,
    "profile_id": "<account:King Kong>",
    "read_message_nr": 1,
    "send_message_nr": 1,
    "show_message_nr": 1,
    "snooze_interval": 0,
    "snooze_time": 0,
    "teams": [],
    "topic": "archivedConv",
    "topic_message_nr": 1,
    "unread_count": 0,
};

let email_conv1 = {
    "index": "...",
    "is_in_muted": true,
    "is_in_recent": true,
    "is_on_left_pane": false,
    "label": "Email",
    "label_id": "<label:Email>",
    "mk_label_status": "active",
    "mk_label_subtype": "email",
    "mk_label_type": "system_label",
    "mk_rec_type": "label",
    "sync_cursor": "{}",
    "sync_inbox_time": 0,
};

let email_conv2 = {
    "admins": [],
    "autojoin_url": "<autojoin:emailConv>",
    "begin_message_nr": 1,
    "bw_message_nr": 1,
    "can_post": true,
    "cmail": "<cmail:emailConv>",
    "conversation_id": "<conv:emailConv>",
    "creator_id": "<account:Will Smith>",
    "default_members": [],
    "export_files": [],
    "export_progress": "1",
    "fw_message_nr": 2,
    "guests": [],
    "has_email_subject": true,
    "has_pinboard": false,
    "has_task_archive": false,
    "has_taskboard": false,
    "inbox_message_nr": 1,
    "inbox_time": "...",
    "is_automute": false,
    "is_full": true,
    "is_init": true,
    "is_list": false,
    "is_managed": false,
    "is_mark_unread": false,
    "is_premium": false,
    "is_tiny": true,
    "join_message_nr": 1,
    "label_ids": [],
    "last_inbox_nr": 0,
    "last_message_nr": 2,
    "last_message_time": "...",
    "leavers": [],
    "members": [
    "<account:Don Johnson>",
    "<account:Will Smith>",
    ],
    "mk_alert_level": "default",
    "mk_conv_type": "cct_default",
    "mk_init_mode": "ic_tiny",
    "mk_rec_type": "conv",
    "organisation_id": null,
    "profile_id": "<account:Will Smith>",
    "read_message_nr": 1,
    "send_message_nr": 1,
    "show_message_nr": 1,
    "snooze_interval": 0,
    "snooze_time": 0,
    "teams": [],
    "topic": "emailConv",
    "topic_message_nr": 2,
    "unread_count": 0,
};

test('system label test: starred', function () {
    let client = UC.bob;
    let conv_topic1 = 'starredConv';
    return thenSequence([
        // create conv with starred system label
        () => client.initial_poll(),
        () => client.api_call("api/conversation/create", {topic: conv_topic1}),
        (res) => expect(res.header.topic).toEqual(conv_topic1),
        () => client.poll_filter({mk_rec_type: 'conv', topic: conv_topic1}),
        () => client.api_call("api/conversation/store/" + client.getConvId(conv_topic1), {
            labels: ['starred']
        }),
        () => client.poke(client.getConvId(conv_topic1), true),
        () => client.api_call("api/label/sync_conversations", {label_id: client.getLabelId(/starred/)}),
        (res) => expect(UC.clean(res.stream[0])).toEqual(starred_conv1),
        () => client.api_call("api/label/sync_conversations", {label_id: client.getLabelId(/starred/)}),
        (res) => expect(UC.clean(res.stream[1])).toEqual(starred_conv2),
    ]);
});

test('system label test: unread', function () {
    let client = UC.jon;
    //let conv_topic2 = 'unreadConv';
    return thenSequence([
        // // create conv with unread system label
        () => client.initial_poll(),
        // () => client.api_call("api/conversation/create", {topic: conv_topic2}),
        // (res) => expect(res.header.topic).toEqual(conv_topic2),
        // () => client.poll_filter({mk_rec_type: 'conv', topic: conv_topic2}),
        // () => client.api_call("api/message/store/" + client.getConvId(conv_topic2), {message: 'unreadMsg'}),
        // // mark the conv as unread
        // () => client.api_call("api/conversation/store/" + client.getConvId(conv_topic2), {
        //     from_message_nr: 2,
        //     read_message_nr: 1,
        // }),
        () => client.api_call("api/label/sync_conversations", {label_id: client.getLabelId(/Unread/)}),
        (res) => expect(UC.clean(res)).toEqual(unread_conv),
    ]);
});

test('system label test: recent', function () {
    let client = UC.meg;
    let conv_topic3 = 'recentConv';
    return thenSequence([
        // create conv with recent system label
        () => client.initial_poll(),
        () => client.api_call("api/conversation/create", {topic: conv_topic3}),
        (res) => expect(res.header.topic).toEqual(conv_topic3),
        () => client.poll_filter({mk_rec_type: 'conv', topic: conv_topic3}),
        () => client.api_call("api/message/store/" + client.getConvId(conv_topic3), {message: 'recentMsg'}),
        () => client.api_call("api/label/sync_conversations", {label_id: client.getLabelId(/Recent/)}),
        (res) => expect(UC.clean(res)).toEqual(recent_conv),
    ]);
});

test('system label test: muted', function () {
    let client = UC.ron;
    let conv_topic4 = 'mutedConv';
    return thenSequence([
        // create conv with muted system label
        () => client.initial_poll(),
        () => client.api_call("api/conversation/create", {topic: conv_topic4}),
        (res) => expect(res.header.topic).toEqual(conv_topic4),
        () => client.poll_filter({mk_rec_type: 'conv', topic: conv_topic4}),
        () => client.api_call("api/conversation/store/" + client.getConvId(conv_topic4), {
            from_message_nr: 1,
            snooze_interval: -1,
        }),
        () => client.poke(client.getConvId(conv_topic4), true),
        () => client.api_call("api/label/sync_conversations", {label_id: client.getLabelId(/Muted/)}),
        (res) => expect(UC.clean(res)).toEqual(muted_conv),
    ]);
});

test('system label test: 1:1 conversations', function () {
    let client = UC.jil;
    return thenSequence([
        // conv with 1:1 system label
        () => client.initial_poll(),
        () => client.api_call("api/label/sync_conversations", {label_id: client.getLabelId(/1:1 Conversations/)}),
        (res) => expect(UC.clean(res)).toEqual(one_on_one_conv),
    ]);
});

test('system label test: spam', function () {
    let client = UC.bill;
    let conv_topic6 = 'spamConv';
    return thenSequence([
        // create conv with spam system label
        () => client.initial_poll(),
        () => client.api_call("api/conversation/create", {topic: conv_topic6}),
        (res) => expect(res.header.topic).toEqual(conv_topic6),
        () => client.poll_filter({mk_rec_type: 'conv', topic: conv_topic6}),
        () => client.api_call("api/conversation/store/" + client.getConvId(conv_topic6), {
            labels: ['Spam']
        }),
        () => client.poke(client.getConvId(conv_topic6), true),
        () => client.api_call("api/label/sync_conversations", {label_id: client.getLabelId(/Spam/)}),
        (res) => expect(UC.clean(res.stream[0])).toEqual(spam_conv1),
        () => client.api_call("api/label/sync_conversations", {label_id: client.getLabelId(/Spam/)}),
        (res) => expect(UC.clean(res.stream[1])).toEqual(spam_conv2),
    ]);
});

test('system label test: archived', function () {
    let client = UC.king;
    let conv_topic7 = 'archivedConv';
    return thenSequence([
        // create conv with archived system label
        () => client.initial_poll(),
        () => client.api_call("api/conversation/create", {topic: conv_topic7}),
        (res) => expect(res.header.topic).toEqual(conv_topic7),
        () => client.poll_filter({mk_rec_type: 'conv', topic: conv_topic7}),
        () => client.api_call("api/conversation/store/" + client.getConvId(conv_topic7), {
            from_message_nr: 1,
            hide_message_nr: 1,
            read_message_nr: 1,
        }),
        () => client.poke(client.getConvId(conv_topic7), true),
        () => client.api_call("api/label/sync_conversations", {label_id: client.getLabelId(/Archived/)}),
        (res) => expect(UC.clean(res.stream[0])).toEqual(archived_conv1),
        () => client.api_call("api/label/sync_conversations", {label_id: client.getLabelId(/Archived/)}),
        (res) => expect(UC.clean(res.stream[1])).toEqual(archived_conv2),
    ]);
});

test('system label test: email', function () {
    let client = UC.will;
    let conv_topic8 = 'emailConv';
    return thenSequence([
        // create conv with email system label
        () => client.initial_poll(),
        () => client.api_call("api/conversation/create", {topic: conv_topic8}),
        (res) => expect(res.header.topic).toEqual(conv_topic8),
        () => client.poll_filter({mk_rec_type: 'conv', topic: conv_topic8}),
        () => client.api_call("api/account/lookup", {lookup_list: [UC.don.email], ignore_list: []}),
        () => client.api_call("api/conversation/store/" + client.getConvId(conv_topic8), {
            add_account_ids: [client.getRecord('contact', 'email', UC.don.email).account_id],
        }),
        () => client.poll_filter({mk_rec_type: 'conv', topic: conv_topic8}),
        () => client.api_call("api/label/sync_conversations", {label_id: client.getLabelId(/Email/)}),
        (res) => expect(UC.clean(res.stream[0])).toEqual(email_conv1),
        () => client.api_call("api/label/sync_conversations", {label_id: client.getLabelId(/Email/)}),
        (res) => expect(UC.clean(res.stream[1])).toEqual(email_conv2),
    ]);
});
