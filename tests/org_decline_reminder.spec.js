import {UserCache, thenSequence} from '../lib';

jasmine.DEFAULT_TIMEOUT_INTERVAL = 50000;

let UC = new UserCache([
    'Fernando Sucre',
    'Alex Mahone',
], __filename);

beforeAll(() => UC.setup());
afterAll(() => UC.cleanup());

let org_after_create = {
    "is_admin": true,
    "is_member": true,
    "mk_rec_type": "org_header",
    "organisation_founder_id": "<account:Fernando Sucre>",
    "organisation_id": "<org:organisationName>",
    "organisation_name": "organisationName",
    "status": "bos_new",
    "trial_time": "...",
    "version_nr": 2,
};

let sync_rec = {
    "event_horizon": 14,
    "limit_time": 0,
    "static_version": "ca8ac3b76a",
    "stream": [{
    "account_id": "<account:Alex Mahone>",
        "activated_time": "...",
        "client_flags": [
        "emoticons_old",
            "show_onboarding",
        ],
        "connected_email": "",
        "dialog_id": null,
        "display_name": "Alex Mahone",
        "email": "<email:Alex Mahone>",
        "export_files": [],
        "export_progress": "1",
        "fleep_address": "<fladdr:Alex Mahone>",
        "fleep_autogen": "<flautogen:Alex Mahone>",
        "has_password": true,
        "is_automute_enabled": true,
        "is_hidden_for_add": true,
        "is_premium": false,
        "mk_account_status": "active",
        "mk_email_interval": "never",
        "mk_rec_type": "contact",
        "organisation_id": null,
        "trial_end_time": "...",
},
 {
    "account_id": "<account:Fleep Support>",
        "activity_time": "...",
        "dialog_id": "<dlg:Fleep Support>",
        "display_name": "Fleep Support",
        "email": "<email:Fleep Support>",
        "fleep_address": "<fladdr:Fleep Support>",
        "is_hidden_for_add": true,
        "mk_account_status": "active",
        "mk_rec_type": "contact",
        "organisation_id": null,
        "sort_rank": "...",
},
 {
    "index": "...",
        "is_in_muted": false,
        "is_in_recent": false,
        "is_on_left_pane": true,
        "label": "starred",
        "label_id": "<label:starred>",
        "mk_label_status": "active",
        "mk_label_subtype": "starred",
        "mk_label_type": "system_label",
        "mk_rec_type": "label",
        "sync_cursor": "{}",
        "sync_inbox_time": 0,
},
 {
    "index": "...",
        "is_in_muted": true,
        "is_in_recent": true,
        "is_on_left_pane": false,
        "label": "Unread",
        "label_id": "<label:Unread>",
        "mk_label_status": "active",
        "mk_label_subtype": "unread",
        "mk_label_type": "system_label",
        "mk_rec_type": "label",
        "sync_cursor": "{}",
        "sync_inbox_time": 0,
},
 {
    "index": "...",
        "is_in_muted": false,
        "is_in_recent": true,
        "is_on_left_pane": true,
        "label": "Recent",
        "label_id": "<label:Recent>",
        "mk_label_status": "active",
        "mk_label_subtype": "recent",
        "mk_label_type": "system_label",
        "mk_rec_type": "label",
        "sync_cursor": "{}",
        "sync_inbox_time": 0,
},
 {
    "index": "...",
        "is_in_muted": true,
        "is_in_recent": false,
        "is_on_left_pane": true,
        "label": "Muted",
        "label_id": "<label:Muted>",
        "mk_label_status": "active",
        "mk_label_subtype": "muted",
        "mk_label_type": "system_label",
        "mk_rec_type": "label",
        "sync_cursor": "{}",
        "sync_inbox_time": 0,
},
 {
    "index": "...",
        "is_in_muted": true,
        "is_in_recent": true,
        "is_on_left_pane": false,
        "label": "1:1 Conversations",
        "label_id": "<label:1:1 Conversations>",
        "mk_label_status": "active",
        "mk_label_subtype": "1:1 conversations",
        "mk_label_type": "system_label",
        "mk_rec_type": "label",
        "sync_cursor": "{}",
        "sync_inbox_time": 0,
},
 {
    "index": "...",
        "is_in_muted": false,
        "is_in_recent": false,
        "is_on_left_pane": true,
        "label": "Spam",
        "label_id": "<label:Spam>",
        "mk_label_status": "active",
        "mk_label_subtype": "spam",
        "mk_label_type": "system_label",
        "mk_rec_type": "label",
        "sync_cursor": "{}",
        "sync_inbox_time": 0,
},
 {
    "index": "...",
        "is_in_muted": false,
        "is_in_recent": false,
        "is_on_left_pane": true,
        "label": "Archived",
        "label_id": "<label:Archived>",
        "mk_label_status": "active",
        "mk_label_subtype": "archived",
        "mk_label_type": "system_label",
        "mk_rec_type": "label",
        "sync_cursor": "{}",
        "sync_inbox_time": 0,
},
 {
    "index": "...",
        "is_in_muted": true,
        "is_in_recent": true,
        "is_on_left_pane": false,
        "label": "Email",
        "label_id": "<label:Email>",
        "mk_label_status": "active",
        "mk_label_subtype": "email",
        "mk_label_type": "system_label",
        "mk_rec_type": "label",
        "sync_cursor": "{}",
        "sync_inbox_time": 0,
},
 {
    "admins": [],
        "autojoin_url": "<autojoin:Fleep Support>",
        "begin_message_nr": 1,
        "bw_message_nr": 2,
        "can_post": true,
        "cmail": "<cmail:Fleep Support>",
        "conversation_id": "<dlg:Fleep Support>",
        "creator_id": "<account:Fleep Support>",
        "default_members": [
        "<account:Fleep Support>",
        ],
        "default_topic": "Fleep Support",
        "export_files": [],
        "export_progress": "1",
        "fw_message_nr": 2,
        "guests": [],
        "has_email_subject": false,
        "has_pinboard": false,
        "has_task_archive": false,
        "has_taskboard": false,
        "inbox_message_nr": 2,
        "inbox_time": "...",
        "is_automute": false,
        "is_init": true,
        "is_list": false,
        "is_managed": false,
        "is_premium": false,
        "is_tiny": true,
        "join_message_nr": 1,
        "label_ids": [
        "<label:1:1 Conversations>",
        ],
        "last_inbox_nr": 1,
        "last_message_nr": 2,
        "last_message_time": "...",
        "leavers": [],
        "members": [
        "<account:Alex Mahone>",
            "<account:Fleep Support>",
        ],
        "mk_alert_level": "default",
        "mk_conv_type": "cct_default",
        "mk_init_mode": "ic_tiny",
        "mk_rec_type": "conv",
        "organisation_id": null,
        "profile_id": "<account:Alex Mahone>",
        "read_message_nr": 0,
        "show_message_nr": 2,
        "snooze_interval": 0,
        "snooze_time": 0,
        "teams": [],
        "topic": "",
        "topic_message_nr": 1,
        "unread_count": 1,
},
 {
    "account_id": "<account:Fleep Support>",
        "conversation_id": "<dlg:Fleep Support>",
        "inbox_nr": 1,
        "message": "<msg><p>Hi there,</p><p>We've created this conversation so it would be easy for you to get in touch with us at Fleep. Feel free to use this conversation if you have any questions or feedback for us. (We <i flp=\"_\" fls=\"_\">love</i> feedback.)</p><p>I will reply as quickly as I can, but I am only human <emo kind=\"esmile\">:)</emo><br/></p><p>Happy Fleeping!</p></msg>",
        "message_nr": 2,
        "mk_message_type": "text",
        "mk_rec_type": "message",
        "posted_time": "...",
        "prev_message_nr": 1,
        "profile_id": "<account:Alex Mahone>",
        "tags": [],
},
 {
    "is_member": false,
        "mk_rec_type": "org_header",
        "organisation_founder_id": "<account:Fernando Sucre>",
        "organisation_id": "<org:organisationName>",
        "organisation_name": "organisationName",
        "status": "bos_new",
        "trial_time": "...",
        "version_nr": 2,
},
 {
    "account_id": "<account:Alex Mahone>",
        "creator_id": "<account:Fernando Sucre>",
        "expire_time": "...",
        "is_active": true,
        "mk_rec_type": "reminder",
        "mk_reminder_type": "org_invite",
        "organisation_id": "<org:organisationName>",
        "remind_time": "...",
        "reminder_id": "<reminder:org_invite>",
}]
};

test('decline org invite', function () {
    let client = UC.fernando;
    let conv_topic = 'declineReminder';
    let org_name = 'organisationName';

    return thenSequence([

        // create conversation for the organisation
        () => client.api_call("api/conversation/create", {topic: conv_topic}),
        (res) => expect(res.header.topic).toEqual(conv_topic),
        () => client.poll_filter({mk_rec_type: 'conv', topic: conv_topic}),
        // create org
        () => client.api_call("api/business/create", {organisation_name: org_name}),
        () => client.poll_filter({mk_rec_type: 'org_header', organisation_name: org_name}),
        // send alex invite reminder
        () => client.api_call("api/business/configure/" + client.getOrgId(org_name), {
            add_account_ids: [UC.alex.account_id]}),
        () => expect(UC.clean(client.getOrg(org_name))).toEqual(org_after_create),
        () => UC.alex.poll_filter({mk_rec_type: 'reminder', organisation_id: client.getOrgId(org_name)}),
        () => UC.alex.matchStream({mk_rec_type: 'reminder', organisation_id: client.getOrgId(org_name), account_id: UC.alex.account_id}),
        (res) => UC.alex.api_call("api/business/decline/", {reminder_id: res.reminder_id}),
        () => client.api_call("api/business/sync/" + client.getOrgId(/organisationName/), {}),
        (res) => expect(UC.clean(res)).toEqual(sync_rec),
    ]);
});